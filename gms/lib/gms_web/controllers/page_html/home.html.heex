
    <div class="card">
            <div class="card-body">
                <h1 class="card-title">Distributed Membership Service with Atomic Multicast</h1>
            </div>
        </div>
        <div class="card mt-3">
            <div class="card-body">
                <input type="text" id="createGroupName" placeholder="Group Name">
                <input type="number" id="numberOfProcesses" placeholder="Number of Processes">
                <.button class="btn btn-primary" id="createGroup" phx-click="create_group" onclick="createGroup()">Create group</.button>
            </div>
        </div>
        <div id="groupsContainer" class="groups-container"></div>
        <script>
        Hooks = {}

        Hooks.StartNode = {
          mounted() {
            this.el.addEventListener('click', e => {
              let nodeName = document.getElementById('nodeName').value;
              if (nodeName === "") {
                alert("Please enter a node name.");
                return;
              }
              this.pushEvent('start_node', { nodeName: nodeName });

              // Add the started node to the dropdown menu
              let nodeSelect = document.getElementById('nodeSelect');
              let option = document.createElement('option');
              option.text = nodeName;
              option.value = nodeName + "@127.0.0.1";
              nodeSelect.add(option);
            });
          }
        };

        Hooks.CreateGroup = {
          mounted() {
            this.el.addEventListener('click', e => {
              this.pushEvent('create_group', {
                nodeName: document.getElementById('nodeSelect').value,
                groupName: document.getElementById('createGroupName').value,
                numberOfProcesses: document.getElementById('numberOfProcesses').value
              });
            });
          }
        };



        function createGroup() {
          var groupName = document.getElementById('createGroupName').value;
          var numberOfProcesses = document.getElementById('numberOfProcesses').value;

          // Create a new div for the group
          var groupDiv = document.createElement('div');
          groupDiv.className = 'card';

          var groupNameH2 = document.createElement('h2');
          groupNameH2.textContent = groupName;
          groupDiv.appendChild(groupNameH2);

          var addProccessBtn = document.createElement('button');
          addProccessBtn.textContent = 'Add Process';
          addProccessBtn.className = 'btn btn-primary';
          var deleteProcessBtn = document.createElement('button');
          deleteProcessBtn.textContent = 'Delete Process';
          deleteProcessBtn.className = 'btn btn-primary';
          var joinGroupBtn = document.createElement('button');
          joinGroupBtn.textContent = 'Join Group';
          joinGroupBtn.className = 'btn btn-primary';
          var leaveGroupBtn = document.createElement('button');
          leaveGroupBtn.textContent = 'Leave Group';
          leaveGroupBtn.className = 'btn btn-primary';
          var sendMessageBtn = document.createElement('button');
          sendMessageBtn.textContent = 'Send Message';
          sendMessageBtn.className = 'btn btn-primary';
          var sendMessageToGroupBtn = document.createElement('button');
          sendMessageToGroupBtn.textContent = 'Send Message to Group';
          sendMessageToGroupBtn.className = 'btn btn-primary';
          var deleteGroupBtn = document.createElement('button');
          deleteGroupBtn.textContent = 'Delete Group';
          deleteGroupBtn.className = 'btn btn-primary';


          // Add process names to the div
          for (var i = 0; i < numberOfProcesses; i++) {
            var processName = 'Process ' + (i + 1);
            var processP = document.createElement('p');
            processP.textContent = processName;
            groupDiv.appendChild(processP);
          }

          // Add the div to the groups container
          var groupsContainer = document.getElementById('groupsContainer');
          groupsContainer.appendChild(groupDiv);
          groupDiv.appendChild(addProccessBtn);
          groupDiv.appendChild(deleteProcessBtn);
          groupDiv.appendChild(joinGroupBtn);
          groupDiv.appendChild(leaveGroupBtn);
          groupDiv.appendChild(sendMessageBtn);
          groupDiv.appendChild(sendMessageToGroupBtn);
          groupDiv.appendChild(deleteGroupBtn);
        }
        </script>
        <style>
        .card {
          box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
          transition: 0.3s;
          width: 80%;
          border-radius: 5px;
          margin: auto;
          padding: 20px;
      }

      .card:hover {
          box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
      }

      .container {
          padding: 2rem;
          text-align: center;
      }

      .btn-primary {
          background-color: #007bff;
          border-color: #007bff;
          color: #fff;
          margin-top: 5px;
          margin-left: auto;
          text-align: center;
      }

      .groups-container {
          display: flex;
          flex-wrap: wrap;
          justify-content: space-between;
      }

      .card {
          flex: 0 0 calc(50% - 20px);
          display: flex;
          align-items: center;
          flex-direction: column;
      }

      .card-body {
          display: block;
          flex-direction: column;
          align-items: center;
      }

      .btn {
          padding: 5px 10px;
          width: 150px;
          display: block;
          margin: 5px auto;
      }

        </style>